{"version":3,"sources":["components/Card/Card.js","components/Cardlist/Cardlist.js","components/ErrorBoundary/ErrorBoundary.js","components/SearchBox/SearchBox.js","components/Scroll/Scroll.js","App.js","actions.js","constants.js","serviceWorker.js","reducers.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","Cardlist","avatars","map","user","i","components_Card_Card","key","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","children","Component","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","App","onRequestAvatars","_this$props","searchField","onSearchChange","isPending","filteredAvatars","filter","avatar","toLowerCase","includes","components_SearchBox_SearchBox","components_Scroll_Scroll","components_ErrorBoundary_ErrorBoundary","components_Cardlist_Cardlist","React","connect","searchAvatars","requestAvatars","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","Boolean","window","location","hostname","match","initialStateSearch","initialStateAvatars","logger","createLogger","rootReducer","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07f66ead.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img\n        alt=\"robot\"\n        src={`https://api.adorable.io/avatars/225/${id}@adorable.png`}\n      />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../Card\";\n\nconst Cardlist = ({ avatars }) => {\n  return (\n    <div>\n      {avatars.map((user, i) => {\n        return (\n          <Card\n            key={i}\n            id={avatars[i].id}\n            name={avatars[i].name}\n            email={avatars[i].email}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cardlist;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oh no! Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"Search Avatars\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = props => {\n  return (\n    <div\n      style={{\n        overflowY: \"scroll\",\n        border: \"1px solid black\",\n        height: \"600px\"\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Cardlist from \"./components/Cardlist\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport SearchBox from \"./components/SearchBox\";\nimport Scroll from \"./components/Scroll\";\nimport { setSearchField, requestAvatars } from \"./actions\";\nimport \"./App.css\";\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchAvatars.searchField,\n    avatars: state.requestAvatars.avatars,\n    isPending: state.requestAvatars.isPending,\n    error: state.requestAvatars.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestAvatars: () => dispatch(requestAvatars())\n  };\n};\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.onRequestAvatars();\n  }\n\n  render() {\n    const { searchField, onSearchChange, avatars, isPending } = this.props;\n    const filteredAvatars = avatars.filter(avatar => {\n      return avatar.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return isPending ? (\n      <h1 className=\"tc\">Loading</h1>\n    ) : (\n      <div className=\"tc\">\n        <h1 className=\"f1\">Avatar Search</h1>\n        <SearchBox searchChange={onSearchChange} />\n        <Scroll>\n          <ErrorBoundary>\n            <Cardlist avatars={filteredAvatars} />\n          </ErrorBoundary>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_AVATARS_PENDING,\r\n  REQUEST_AVATARS_SUCCESS,\r\n  REQUEST_AVATARS_FAILED\r\n} from \"./constants.js\";\r\n\r\nexport const setSearchField = text => ({\r\n  type: CHANGE_SEARCH_FIELD,\r\n  payload: text\r\n});\r\n\r\nexport const requestAvatars = () => dispatch => {\r\n  dispatch({ type: REQUEST_AVATARS_PENDING });\r\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(response => response.json())\r\n    .then(data => dispatch({ type: REQUEST_AVATARS_SUCCESS, payload: data }))\r\n    .catch(error => dispatch({ type: REQUEST_AVATARS_FAILED, payload: error }));\r\n};\r\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCHFIELD\";\r\n\r\nexport const REQUEST_AVATARS_PENDING = \"REQUEST_AVATARS_PENDING\";\r\nexport const REQUEST_AVATARS_SUCCESS = \"REQUEST_AVATARS_SUCCESS\";\r\nexport const REQUEST_AVATARS_FAILED = \"REQUEST_AVATARS_FAILED\";\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_AVATARS_PENDING,\r\n  REQUEST_AVATARS_SUCCESS,\r\n  REQUEST_AVATARS_FAILED\r\n} from \"./constants.js\";\r\n\r\nconst initialStateSearch = {\r\n  searchField: \"\"\r\n};\r\n\r\nexport const searchAvatars = (state = initialStateSearch, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return Object.assign({}, state, { searchField: action.payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateAvatars = {\r\n  isPending: false,\r\n  avatars: [],\r\n  error: \"\"\r\n};\r\n\r\nexport const requestAvatars = (state = initialStateAvatars, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_AVATARS_PENDING:\r\n      return Object.assign({}, state, { isPending: true });\r\n    case REQUEST_AVATARS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        avatars: action.payload,\r\n        isPending: false\r\n      });\r\n    case REQUEST_AVATARS_FAILED:\r\n      return Object.assign({}, state, {\r\n        error: action.payload,\r\n        isPending: false\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport App from \"./App\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\nimport { searchAvatars, requestAvatars } from \"./reducers\";\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({ searchAvatars, requestAvatars });\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}